---
  - name: Get instances info
    hosts: localhost
    connection: local
    gather_facts: no
    vars:
       aws_access_key: ''
       aws_secret_key: ''
       key_name: ''
       instance_type: ''
       image: ''
       wait: ''
       assign_public_ip: ''
       subnet_name: ''
       region: ''
       server_pre_name: ''
       ec2_ansible_group: "{{user_name}}"
       my_email_address: "{{user_name}}@redhat.com"
       alwaysup: ''
       deleteby: ''

    tasks:
    - name: If vpc_subnet_id doesnt exist lookup by {{subnet_name}}
      block:
      - name: Looking Up Subnet_id for {{subnet_name}} if vpc_subnet_id doesn't exist
        ec2_vpc_subnet_info:
          region: "{{region}}"
          filters:
            "tag:Name": "{{subnet_name}}"
        register: subnet_id

      - name: Setting vpc_subnet_id based on Lookup of {{subnet_name}}
        set_fact:
          vpc_subnet_id: "{{subnet_id.subnets[0].id}}"
      when: vpc_subnet_id is undefined

    - name: Show Subnet_id
      debug:
        msg: "{{vpc_subnet_id}}"

    - name: Creating {{count}} AWS VMs in {{region}}
      ec2_instance:
       key_name: "{{key_name}}"
       instance_type: "{{instance_type}}"
       image_id:  "{{image}}"
       wait: "{{wait}}"
       region: "{{region}}"
       vpc_subnet_id:  "{{vpc_subnet_id}}"
       network:
         assign_public_ip: "{{assign_public_ip}}"
       tags:
         AlwaysUp: "{{alwaysup}}"
         Name: "{{server_pre_name}}"
         ansible_group: "{{ec2_ansible_group}}"
         Createdby: Ansible Tower
         Contact: "{{my_email_address}}"
         DeletebBy: "{{deleteby}}"
