---
  - name: Create AWS VPC
    hosts: localhost
    connection: local
    gather_facts: no
    vars:
       aws_access_key: ''
       aws_secret_key: ''
       vpc_name: ''
       vpc_cidr: ''
       region: ''
       user_name: ''
       ec2_ansible_group: "{{user_name}}"
       my_email_address: "{{user_name}}@redhat.com"
       ec2_security_group_name: "{{vpc_name}}_Secgrp"
       deleteby: ''

    tasks:
    - name: Create VPC {{ vpc_name }}_{{user_name}} in {{ region }}
      ec2_vpc_net:
        name: "{{ vpc_name }}_{{user_name}}"
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        state: present

        tags:
          Name: "{{user_name}}"
          ansible_group: "{{ec2_ansible_group}}"
          Contact: "{{my_email_address}}"
          DeletebBy: "{{deleteby}}"
      register: my_vpc
    - name: Display my_vpc.vpc info for "{{vpc_name}}"
      debug:
        var: my_vpc.vpc
    - name: Display my_vpc.vpc.id info for "{{vpc_name}}"
      debug:
        var: my_vpc.vpc.id

    - name: create security group {{ ec2_security_group_name }}
      ec2_group:
        name: "{{ ec2_security_group_name }}"
        description: security group with rule descriptions
        vpc_id: "{{ my_vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: "{{ user_name }}"
          ansible_group: "{{ ec2_ansible_group }}"
          Contact: "{{ my_email_address }}"
          DeleteBy: "{{deleteby}}"
        rules:
        - proto: icmp
          from_port: 8 # icmp type, -1 = any type
          to_port:  -1 # icmp subtype, -1 = any subtype
          cidr_ip: 0.0.0.0/0
          rule_desc: allow ping
        - proto: tcp
          ports: "{{ open_ports_list }}"
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on port {{open_ports_list}}
      tags:
        - createsecgrp
        - onlyvpc
      register: my_security_group
